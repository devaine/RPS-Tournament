### JOBS ###

test:
  image: ubuntu:latest
  script:
    - echo apparently im needed!!

build-and-push:
  image: docker:28.0

  services:
    - docker:28.0-dind-rootless

  variables:
    DOCKER_HOST: "unix:///runner/services/docker/docker.sock"

  before_script:
    - printf $PAT | docker login $registry_server -u $PAT_USER --password-stdin
    - printf $GITHUB_PAT | docker login ghcr.io -u $GITHUB_PAT_USER --password-stdin

  script:
    # Builds and Pushes to GitLab
    # NOTE: Add "--secret 'id=VARIABLE_NAME'" if you have docker secret (required)
    - docker buildx build --secret "id=PROD_URL" -t $registry_server/rps-developers/rps-tournament:$CI_COMMIT_BRANCH .
    - docker push $registry_server/rps-developers/rps-tournament:$CI_COMMIT_BRANCH

    # Builds and Pushes to GitHub
    - docker buildx build --secret "id=PROD_URL" -t ghcr.io/$GITHUB_PAT_USER/rps-tournament:$CI_COMMIT_BRANCH .
    - docker push ghcr.io/$GITHUB_PAT_USER/rps-tournament:$CI_COMMIT_BRANCH

  after_script:
    - docker logout $registry_server
    - docker logout ghcr.io
    - rm -rf ~/.docker/config.json
    - rm -rf ~/.*history

deploy:
  when: on_success
  needs: ["build-and-push"]
  image: ubuntu:latest
  before_script:
    - unset HISTFILE
    - apt update -y && apt install openssh-client docker.io -y
    - mkdir ~/.ssh
    
    - install -m 600 -D /dev/null ~/.ssh/$SSH_USER
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/$SSH_USER
    - ssh-keyscan -H -p $SSH_PORT $SSH_HOST > ~/.ssh/known_hosts

    - printf "Host deploy\nPort $SSH_PORT\nHostname $SSH_HOST\nIdentityFile ~/.ssh/$SSH_USER\nUser $SSH_USER" > ~/.ssh/config
    - docker context create rps --docker "host=ssh://deploy"
    - docker context use rps
    - printf $PAT | docker login $registry_server -u $PAT_USER --password-stdin

  script:
    - docker pull $registry_server/rps-developers/rps-tournament:$CI_COMMIT_BRANCH
    - docker stack deploy --prune -c docker-stack.yml rps --with-registry-auth

  after_script:
    - docker logout $registry_server
    - docker context use default
    - docker context rm rps
    - rm -rf ~/.ssh
    - rm -rf ~/.*history
    - rm -rf ~/.docker/config.json

### STAGES ###
stages:
  - test
  - build-and-push
  - deploy
